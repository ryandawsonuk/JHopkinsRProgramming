find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(KernSmooth)
packageDescription("KernSmooth")
getwd()
getwd()
setwd("C:/Users/ryan/Coursera/JHopkinsRProgramming")
swirl()
install(swirl)
install.packages('swirl')
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:lenght(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- (num_vect < 1)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"Ryan")
my_name
paste(my_name,collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
c(11,2,NA)
c(11, 2, NA)
c(c(11, 2, NA))
info()
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
bye()
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
attributes(x[[1]])
print(x[[1]])
2
x <- 1:4
y <- 2:3
x+y
x
y
class(x+y)
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
getwd()
read.data('hw1_data.cs')
read.data('hw1_data.csv')
read.csv('hw1_data.csv')
hw1 <- read.csv('hw1_data.csv')
hw1
names(hw1)
head(hw1)
?head
head(hw1,n=2)
?count
count.fields
hw1
dim(hw1)
tail(hw1)
tail(hw1,n=2)
hw1[c(47,"Ozone")]
hw1[47]
hw1$Ozone
hw1$Ozone[[47]]
count(is.na(hw1$Ozone))
sum(is.na(hw1$Ozone))
complete.cases(hw1$Ozone)
!is.na(hw1$Ozone)
hw1$Ozone[!is.na(hw1$Ozone)]
mean(hw1$Ozone[!is.na(hw1$Ozone)])
mean(hw1$Ozone[complete.cases(hw1$Ozone)])
hw1[hw1$Ozone > 31 & hw1$Temp > 90]
hw1[which(hw1$Ozone > 31 & hw1$Temp > 90)]
?which
subset(hw1,hw1$Ozone > 31 & hw1$Temp > 90)
sol <- subset(hw1,hw1$Ozone > 31 & hw1$Temp > 90)
mean(sol$Solar.R)
subset(hw1,hw1$Month==6)
mean( subset(hw1,hw1$Month==6)$Temp)
max( subset(hw1,hw1$Month==5)$Ozon)
max( subset(hw1,hw1$Month==5)$Ozone)
subset(hw1,hw1$Month==5)$Ozone
sub <- subset(hw1,hw1$Month==5)$Ozone
sub[complete.cases(sub)]
max(sub[complete.cases(sub)])
max( subset(hw1,hw1$Month==5)$Ozone[complete.cases(subset(hw1,hw1$Month==5)$Ozone)])
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!TRUE
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(div = 2, 4)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
telegram("bob")
submit()
submit()
mad_libs(place="place",adjective="adjective",noun="noun")
submit
submit()
paste('I',paste('love','R'))
'I' %p% 'love' %p% 'R'
'I'%p%'love'%p%'R'
'I'%p%'love'%p%'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() -t1
difftime(Sys.time(), t1, units = 'days')
getwd()
setwd('module2/')
getwd()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
Y
y
getwd()
?read.csvv
?read.csv
?read.csv
?aggregate
?merge
?list.files
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
?complete.cases
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
?complete.cases
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source('complete.R')
cr <- corr("specdata", 150)
head(cr)
source('corr.R')
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
summar(cr)
summary(cr)
head(cr)
source('corr.R')
cr <- corr("specdata", 5000)
head(cr)
cr <- corr("specdata", 150)
summary(cr)
?names
names(cr)
?summary
?labels
labels(cr)
cr
summar(cr)
summary(cr)
?cor
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
